# Router Policy for Agent Selection
# MetaAgent uses these triggers to route tasks to appropriate agents

triggers:
  # Research and Investigation
  - when: "(research|unknowns|market|risks|investigate|explore)"
    route: "Researcher ðŸŸ£"
    priority: 1
    
  # Specification and Requirements
  - when: "(spec|PRIMARY_SPEC.md|types|invariants|protocols|examples)"
    route: "TechLead ðŸ”µ"
    priority: 2
    
  # User Stories and Product
  - when: "(gherkin|story|acceptance|backlog|feature|requirement)"
    route: "ProductOwner ðŸŸ "
    priority: 3
    
  # Architecture and Design
  - when: "(architecture|diagram|contract|nfr|system design|scalability)"
    route: "Architect ðŸŸ¢"
    priority: 4
    
  # Data Processing
  - when: "(ingest|etl|dq|lineage|pipeline|csv|data processing)"
    route: "DataEngineer ðŸ§±"
    priority: 5
    
  # Analytics and ML
  - when: "(feature|metric|baseline|evaluation|model|prediction|analytics)"
    route: "DataScientist ðŸ”¬"
    priority: 6
    
  # Backend Development
  - when: "(api|endpoint|service|backend|server|database|auth)"
    route: "BackendEngineer ðŸ”´"
    priority: 7
    
  # Frontend Development
  - when: "(ui|aria|selector|frontend|button|form|dashboard|react)"
    route: "FrontendEngineer ðŸŸ¡"
    priority: 8
    
  # Testing
  - when: "(playwright|e2e|test|assert|validation|coverage)"
    route: "QA ðŸŸ¤"
    priority: 9
    
  # Fix Generation
  - when: "(fail|flake|patch|fix|repair|heal)"
    route: "SelfHealing âš«"
    priority: 10
    
  # Delivery and Release
  - when: "(status|risk|report|release|deploy|delivery)"
    route: "DeliveryLead ðŸŸ©"
    priority: 11

# Default routing when no triggers match
defaults:
  first: "Researcher ðŸŸ£"  # Start with research if unclear
  last: "DeliveryLead ðŸŸ©"  # End with delivery report
  fallback: "TechLead ðŸ”µ"  # When completely uncertain

# Dynamic agent patterns
dynamic_patterns:
  - pattern: "dynamic_*"
    model_default: "claude-3-5-sonnet-20241022"
    max_lifetime_hours: 24
    auto_retire: true

# Parallel execution rules
parallel_rules:
  - agents: ["ProductOwner ðŸŸ ", "Architect ðŸŸ¢"]
    can_parallel: true
  - agents: ["DataEngineer ðŸ§±", "BackendEngineer ðŸ”´", "FrontendEngineer ðŸŸ¡"]
    can_parallel: true
  - agents: ["QA ðŸŸ¤", "SelfHealing âš«"]
    can_parallel: false  # Must be sequential

# Context curation rules
context_rules:
  minimal: true  # Always provide minimal context
  max_files_per_agent: 10
  exclude_patterns:
    - "*.pyc"
    - "__pycache__"
    - ".git"
    - "node_modules"
    - ".env"